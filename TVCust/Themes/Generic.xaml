<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:TVCust">

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="13" Height="13" Background="LightGray">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Collapsed">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Expanded">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="Collapsed">
                            <Rectangle Width="11" Height="11">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                                </Rectangle.Stroke>
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="White"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Path HorizontalAlignment="Center"  VerticalAlignment="Center" 
                                      Margin="1,1,1,1"
                                      Data="M0,2 L0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2z">
                                <Path.Fill>
                                    <SolidColorBrush Color="Black" />
                                </Path.Fill>
                            </Path>
                        </Grid>

                        <Grid x:Name="Expanded" Visibility="Hidden">
                            <Rectangle Width="11" Height="11">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                                </Rectangle.Stroke>
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="White"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Width="7" Height="1" Stroke="Black" StrokeThickness="1" 
                                       Margin="1">
                            </Rectangle>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <local:LeftMarginMultiplierController x:Key="lengthConverter"/>
    
    <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}"
           x:Key="treeViewItemStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <StackPanel SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Border x:Name="Bd" SnapsToDevicePixels="True" RenderOptions.EdgeMode="Aliased"
                                BorderThickness="2">
                            <Grid Margin="{Binding Converter={StaticResource ResourceKey=lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="23"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Width="1" 
                                               Stroke="Black" Margin="1,-1"
                                               StrokeThickness="1" StrokeDashArray="2,2"/>
                                <Rectangle Grid.Column="0" Height="1" 
                                               Stroke="Black" Margin="13,0,0,0"
                                               StrokeThickness="1" StrokeDashArray="2,2"/>
                                <ToggleButton Grid.Column="0" x:Name="Expander"
                                                  Style="{StaticResource ExpandCollapseToggleStyle}"
                                                  IsChecked="{Binding IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                                                  ClickMode="Press"/>
                                <ContentPresenter x:Name="PART_Header" Margin="2,0,0,0"
                                                      Grid.Column="1" ContentSource="Header"
                                                      HorizontalAlignment="Stretch"/>
                            </Grid>
                            <Border.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="#bbeeff"/>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush" Value="#3380ff"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Resources>
                        </Border>
                        <Grid UseLayoutRounding="True" SnapsToDevicePixels="True" MinHeight="20"
                              x:Name="ParentLine">
                            <ItemsPresenter x:Name="ItemsHost"/>
                            <Grid Margin="{Binding Converter={StaticResource lengthConverter},RelativeSource={RelativeSource TemplatedParent}}"
                                  SnapsToDevicePixels="True" UseLayoutRounding="True">
                                <Rectangle Width="1" StrokeThickness="1" HorizontalAlignment="Left"
                                           Stroke="Black" StrokeDashArray="2"
                                           Margin="13,-2,0,0"/>
                            </Grid>
                        </Grid>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ParentLine" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="ParentLine" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="#FFF7D280"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="#656565"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:TreeViewControl2}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeViewControl2}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <TreeView x:Name="treebase"
                                  ItemsSource="{TemplateBinding ItemsSource}"
                                  ItemTemplate="{TemplateBinding ItemTemplate}">
                            <TreeView.Resources>
                                <Style TargetType="{x:Type TreeView}">
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                </Style>
                                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource treeViewItemStyle}"/>
                            </TreeView.Resources>
                        </TreeView>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
